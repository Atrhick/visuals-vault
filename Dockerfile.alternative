# Alternative Dockerfile that skips problematic native dependencies
# Multi-stage build for React application
FROM node:18-alpine as build

# Install Python and build dependencies
RUN apk add --no-cache python3 make g++ py3-pip git

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Remove hardware wallet dependencies before install
RUN sed -i '/@web3-onboard\/ledger/d' package.json && \
    sed -i '/@web3-onboard\/trezor/d' package.json

# Install dependencies
RUN npm install

# Copy source code
COPY . .

# Build the application
RUN npm run build

# Production stage with Nginx
FROM nginx:alpine

# Copy custom nginx config
COPY nginx.conf /etc/nginx/nginx.conf

# Copy built application from build stage
COPY --from=build /app/dist /usr/share/nginx/html

# Expose port 8080 (Cloud Run default)
EXPOSE 8080

# Start Nginx
CMD ["nginx", "-g", "daemon off;"]